name: CMake-Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  Build:
    runs-on: ubuntu-latest
    env:
      CMAKE_BUILD_TYPE: Release
      CMAKE_BUILD_OPTIONS: -DBUILD_TESTS=ON -DBUILD_PROFILER=ON
      BUILD_DIR: ${{github.workspace}}/cmake-build-release/

    steps:
      - uses: actions/checkout@v2

      - name: Configure CMake
        run: cmake -B ${{env.BUILD_DIR}} -DCMAKE_BUILD_TYPE=${{env.CMAKE_BUILD_TYPE}} ${{env.CMAKE_BUILD_OPTIONS}}

      - name: Build
        run: cmake --build ${{env.BUILD_DIR}}

      - name: Upload build artifacts for tests
        env:
          TESTS_DIR: ${{github.workspace}}/treelib/cmake-build-release/
        uses: actions/upload-artifact@v2
        with:
          name: artifacts-for-tests
          path: ${{env.TESTS_DIR}}/

      - name: Upload build artifacts for profiler
        env:
          PROFILER_DIR: ${{env.BUILD_DIR}}/profiler/
        uses: actions/upload-artifact@v2
        with:
          name: artifacts-for-profiler
          path: ${{env.PROFILER_DIR}}/run_profiler

  Tests:
    runs-on: ubuntu-latest
    needs: Build

    steps:
      - name: Download artifacts for tests
        uses: actions/download-artifact@v2
        with:
          name: artifacts-for-tests

      - name: Run tests
        run: |
          echo "Running unit tests ..."
          chmod +x avl
          ./avl
          echo "unit tests done!"
          echo "Running stress tests ..."
          chmod +x stress
          ./stress
          echo "stress tests done!"

  Profiling:
    runs-on: ubuntu-latest
    needs: Tests

    steps:
      - name: Download artifacts for profiler
        uses: actions/download-artifact@v2
        with:
          name: artifacts-for-profiler

      - name: Run profiler
        run: |
          mkdir results
          echo "Running profiler ..."
          chmod +x run_profiler
          ./run_profiler all
          echo "done!"

      - name: Upload profiling artifacts
        uses: actions/upload-artifact@v2
        with:
          name: profiling-artifacts
          path: ${{github.workspace}}/results/

  Report:
    runs-on: ubuntu-latest
    needs: Profiling

    steps:
      - uses: actions/checkout@v2

      - name: Download profiling artifacts
        uses: actions/download-artifact@v2
        with:
          name: profiling-artifacts

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies for the report
        run: |
          python -m pip install --upgrade pip
          pip install runipy
              
      - name: Make report
        run: |
          rm -r ${{github.workspace}}/profiler/results
          mv results ${{github.workspace}}/profiler/
          runipy -o report.ipynb

      - name: Upload profiling artifacts
        uses: actions/upload-artifact@v2
        with:
          name: profiling-artifacts
          path: ${{github.workspace}}/profiler/results/

      - name: Commit the report
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add profiler/results
          git add report.ipynb
          git commit -m "make report"

      - name: Push the report
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}              